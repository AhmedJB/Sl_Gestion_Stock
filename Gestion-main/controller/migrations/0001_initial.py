# Generated by Django 4.1.1 on 2023-07-05 20:32

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.TextField(primary_key=True, serialize=False)),
                ('type', models.TextField()),
                ('provider', models.TextField()),
                ('provideraccountid', models.TextField(db_column='providerAccountId')),
                ('refresh_token', models.TextField(blank=True, null=True)),
                ('access_token', models.TextField(blank=True, null=True)),
                ('expires_at', models.IntegerField(blank=True, null=True)),
                ('token_type', models.TextField(blank=True, null=True)),
                ('scope', models.TextField(blank=True, null=True)),
                ('id_token', models.TextField(blank=True, null=True)),
                ('session_state', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Account',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Example',
            fields=[
                ('id', models.TextField(primary_key=True, serialize=False)),
                ('createdat', models.DateTimeField(db_column='createdAt')),
                ('updatedat', models.DateTimeField(db_column='updatedAt')),
            ],
            options={
                'db_table': 'Example',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PrismaMigrations',
            fields=[
                ('id', models.CharField(max_length=36, primary_key=True, serialize=False)),
                ('checksum', models.CharField(max_length=64)),
                ('finished_at', models.DateTimeField(blank=True, null=True)),
                ('migration_name', models.CharField(max_length=255)),
                ('logs', models.TextField(blank=True, null=True)),
                ('rolled_back_at', models.DateTimeField(blank=True, null=True)),
                ('started_at', models.DateTimeField()),
                ('applied_steps_count', models.IntegerField()),
            ],
            options={
                'db_table': '_prisma_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.TextField(primary_key=True, serialize=False)),
                ('sessiontoken', models.TextField(db_column='sessionToken', unique=True)),
                ('expires', models.DateTimeField()),
            ],
            options={
                'db_table': 'Session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Testtest',
            fields=[
                ('id', models.TextField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'TestTest',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.TextField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('surname', models.TextField()),
                ('email', models.TextField(unique=True)),
                ('username', models.TextField(unique=True)),
                ('password', models.TextField()),
                ('isadmin', models.BooleanField(db_column='isAdmin')),
            ],
            options={
                'db_table': 'User',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Userinformation',
            fields=[
                ('id', models.TextField(primary_key=True, serialize=False)),
                ('cin', models.TextField()),
                ('naissance', models.DateTimeField()),
                ('address', models.TextField()),
                ('tel', models.TextField(unique=True)),
            ],
            options={
                'db_table': 'UserInformation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Verificationtoken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.TextField()),
                ('token', models.TextField(unique=True)),
                ('expires', models.DateTimeField()),
            ],
            options={
                'db_table': 'VerificationToken',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=255)),
                ('email', models.CharField(default='', max_length=255)),
                ('phone', models.CharField(default='', max_length=255)),
                ('address', models.CharField(default='', max_length=255)),
                ('credit', models.FloatField(default=0)),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Echeance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('type', models.IntegerField(default=0)),
                ('total', models.FloatField(default=0)),
                ('paid', models.FloatField(default=0)),
                ('reste', models.FloatField(default=0)),
                ('dateEcheance', models.DateTimeField(default=django.utils.timezone.now)),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Invoices',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('f_id', models.CharField(default='', max_length=255)),
                ('path', models.CharField(default='', max_length=255)),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='OptionCategories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('value', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total', models.FloatField(default=0)),
                ('paid', models.FloatField(default=0)),
                ('mode', models.IntegerField(default=0)),
                ('transport', models.CharField(default='CTM', max_length=255)),
                ('o_id', models.CharField(default='', max_length=255)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='controller.client')),
            ],
        ),
        migrations.CreateModel(
            name='Provider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=255)),
                ('email', models.CharField(default='', max_length=255)),
                ('phone', models.CharField(default='', max_length=255)),
                ('address', models.CharField(default='', max_length=255)),
                ('credit', models.FloatField(default=0)),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('p_id', models.CharField(default='', max_length=255)),
                ('name', models.CharField(default='', max_length=255)),
                ('ptype', models.CharField(default='', max_length=255)),
                ('paid', models.FloatField(default=0)),
                ('price_vente', models.FloatField(default=0)),
                ('price_achat', models.FloatField(default=0)),
                ('quantity', models.IntegerField(default=0)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='controller.provider')),
            ],
        ),
        migrations.CreateModel(
            name='OrderDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=255)),
                ('provider_id', models.IntegerField(default=-1)),
                ('product_id', models.IntegerField(default=-1)),
                ('quantity', models.IntegerField(default=0)),
                ('prix', models.FloatField(default=0)),
                ('prix_achat', models.FloatField(default=0)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='controller.order')),
            ],
        ),
        migrations.CreateModel(
            name='Options',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metal', models.CharField(default='', max_length=255)),
                ('type', models.CharField(default='', max_length=255)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='controller.product')),
            ],
        ),
        migrations.CreateModel(
            name='MvtStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mvt_type', models.CharField(default='', max_length=255)),
                ('qt_sortie', models.IntegerField(default=0)),
                ('qt_entree', models.IntegerField(default=0)),
                ('old_quantity', models.IntegerField(default=0)),
                ('new_quantity', models.IntegerField(default=0)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='controller.product')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(default='', max_length=254, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
